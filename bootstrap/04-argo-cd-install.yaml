# ArgoCD Installation using Helm Chart
# This manifest installs ArgoCD using the official Helm chart for better production practices
---
apiVersion: v1
kind: Namespace
metadata:
  name: argocd
  labels:
    name: argocd
---
# ArgoCD Helm Repository
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-repo
  namespace: argocd
data:
  repositories.yaml: |
    - name: argo
      url: https://argoproj.github.io/argo-helm
      type: helm
---
# ArgoCD Application for Self-Management
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argocd
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: gitops
  annotations:
    argocd.argoproj.io/sync-wave: "0"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://argoproj.github.io/argo-helm
    chart: argo-cd
    targetRevision: 5.51.6
    helm:
      valueFiles:
        - bootstrap/helm-values/argo-cd-values.yaml
      values: |
        global:
          domain: argocd.example.com
        server:
          replicas: 2
          service:
            type: LoadBalancer
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hosts:
              - argocd.example.com
            tls:
              - secretName: argocd-tls
                hosts:
                  - argocd.example.com
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
        controller:
          replicas: 2
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
        repoServer:
          replicas: 2
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
        dex:
          enabled: false
        notifications:
          enabled: false
        applicationSet:
          enabled: true
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
      - PrunePropagationPolicy=foreground
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 3

