# GitHub Actions Workflow: Terraform Drift Detection
# Detects drift between Terraform state and actual infrastructure

name: "Terraform Drift Detection"

on:
  schedule:
    - cron: '0 3 * * *'  # Every day at 3am UTC
  workflow_dispatch:

jobs:
  drift-detection:
    name: "Terraform Drift Detection"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      # Optional: configure AWS via OIDC role (uncomment and set secret in repo settings)
      # - name: Configure AWS credentials (assume role)
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN_PROD }}
      #     aws-region: us-east-1

      - name: Terraform Init
        run: terraform init -backend=false -input=false

      - name: Terraform Plan (Drift Detection)
        run: terraform plan -detailed-exitcode -input=false

      - name: Notify on Drift (log)
        if: failure()
        run: echo "Drift detected in production infrastructure. Review plan output in job logs."

# Notes:
# - This workflow runs daily and on manual dispatch.
# - Configure SMTP secrets for email notifications, or replace with Slack/webhook as needed.
